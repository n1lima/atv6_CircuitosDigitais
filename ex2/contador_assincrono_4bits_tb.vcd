$date
	Sat Nov 02 14:06:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module contador_assincrono_4bits_tb $end
$var wire 4 ! Q [3:0] $end
$var reg 1 " CLK $end
$var reg 1 # CLR $end
$var reg 1 $ PR $end
$scope module uut $end
$var wire 1 " CK $end
$var wire 1 # CLR $end
$var wire 1 $ PR $end
$var wire 4 % Q [3:0] $end
$scope module ff1 $end
$var wire 1 " CK $end
$var wire 1 # CLR $end
$var wire 1 & J $end
$var wire 1 ' K $end
$var wire 1 $ PR $end
$var reg 1 ( Q $end
$upscope $end
$scope module ff2 $end
$var wire 1 ) CK $end
$var wire 1 # CLR $end
$var wire 1 * J $end
$var wire 1 + K $end
$var wire 1 $ PR $end
$var reg 1 , Q $end
$upscope $end
$scope module ff3 $end
$var wire 1 - CK $end
$var wire 1 # CLR $end
$var wire 1 . J $end
$var wire 1 / K $end
$var wire 1 $ PR $end
$var reg 1 0 Q $end
$upscope $end
$scope module ff4 $end
$var wire 1 1 CK $end
$var wire 1 # CLR $end
$var wire 1 2 J $end
$var wire 1 3 K $end
$var wire 1 $ PR $end
$var reg 1 4 Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x4
13
12
x1
x0
1/
1.
x-
x,
1+
1*
x)
x(
1'
1&
bx %
1$
0#
0"
bx !
$end
#10
0)
bx0 !
bx0 %
0(
1"
#20
0"
#30
1)
bx1 !
bx1 %
1(
1"
1#
#40
0"
#50
0)
bx0 !
bx0 %
0(
1"
#60
0"
#70
1)
bx1 !
bx1 %
1(
1"
#80
0"
#90
0)
bx0 !
bx0 %
0(
1"
#100
0"
#110
1)
bx1 !
bx1 %
1(
1"
#120
0"
#130
0)
bx0 !
bx0 %
0(
1"
0#
#140
0"
#150
1)
bx1 !
bx1 %
1(
1"
1#
#160
0"
#170
0)
bx0 !
bx0 %
0(
1"
#180
0"
#190
1)
bx1 !
bx1 %
1(
1"
#200
0"
#210
0)
bx0 !
bx0 %
0(
1"
#220
0"
#230
1)
bx1 !
bx1 %
1(
1"
#240
0"
#250
0)
bx0 !
bx0 %
0(
1"
